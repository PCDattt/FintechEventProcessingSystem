// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: transaction.sql

package db

import (
	"context"
)

const createTransaction = `-- name: CreateTransaction :one
INSERT INTO transactions (type, status, amount, message, from_Account_Id, to_Account_Id)
VALUES ($1, $2, $3, $4, $5, $6)
RETURNING id, status, message
`

type CreateTransactionParams struct {
	Type          int32  `json:"type"`
	Status        int32  `json:"status"`
	Amount        int32  `json:"amount"`
	Message       string `json:"message"`
	FromAccountID int32  `json:"from_account_id"`
	ToAccountID   int32  `json:"to_account_id"`
}

type CreateTransactionRow struct {
	ID      int32  `json:"id"`
	Status  int32  `json:"status"`
	Message string `json:"message"`
}

func (q *Queries) CreateTransaction(ctx context.Context, arg CreateTransactionParams) (CreateTransactionRow, error) {
	row := q.db.QueryRow(ctx, createTransaction,
		arg.Type,
		arg.Status,
		arg.Amount,
		arg.Message,
		arg.FromAccountID,
		arg.ToAccountID,
	)
	var i CreateTransactionRow
	err := row.Scan(&i.ID, &i.Status, &i.Message)
	return i, err
}
